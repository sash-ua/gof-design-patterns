{"version":3,"sources":["webpack:///./src/app/modules/structural/flyweight/components/flyweight.component.css","webpack:///./src/app/modules/structural/flyweight/components/flyweight.component.html","webpack:///./src/app/modules/structural/flyweight/components/flyweight.component.ts","webpack:///./src/app/modules/structural/flyweight/flyweight-routing.module.ts","webpack:///./src/app/modules/structural/flyweight/flyweight.module.ts","webpack:///./src/app/modules/structural/flyweight/services/flyweight.service.ts","webpack:///./src/app/modules/structural/flyweight/services/flyweight/flyweight.ts"],"names":[],"mappings":"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","file":"modules-structural-flyweight-flyweight-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<app-pattern [patternCompData]=\\\"patternCompData\\\"></app-pattern>\\n\"","import {Component} from '@angular/core';\nimport {ELEMENTS} from '../../../../elements';\nimport {LINKS} from '../../../../LINKS';\nimport {FlyweightService} from '../services/flyweight.service';\nimport {Observable} from 'rxjs';\nimport {GetGitContentService} from '../../../../core/services/http/get-git-content.service';\nimport {map} from 'rxjs/operators';\nimport {PatternConfig} from '../../../shared/components/pattern/pattern.component';\nimport {InterpreterService} from '../../../behavioral/interpreter/services/interpreter.service';\n\n@Component({\n  selector: 'app-flyweight',\n  templateUrl: './flyweight.component.html',\n  styleUrls: ['./flyweight.component.css']\n})\nexport class FlyweightComponent {\n  public patternCompData: PatternConfig = {\n    gitLink: LINKS.structural.flyweight.gitApiLink,\n    wikiLink: LINKS.structural.flyweight.wikiLink,\n    sampleLink: LINKS.structural.flyweight.sampleLink,\n    linkName: ELEMENTS.linkToSampleName,\n    sample: ELEMENTS.sampleTitle\n  };\n\n  constructor(private fl: FlyweightService, private http: GetGitContentService, private interpreter: InterpreterService) {\n    fl.flyweight();\n    const content$: Observable<string> = this.http.getData(this.patternCompData.gitLink).pipe(\n      map((resp: any) => {\n        return resp ? this.interpreter.interpreter(atob(resp.content)) : null;\n      })\n    );\n    this.patternCompData = Object.assign(this.patternCompData, {content$});\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {FlyweightComponent} from './components/flyweight.component';\n\nconst routes: Routes = [\n  {path: '', component: FlyweightComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FlyweightRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlyweightComponent } from './components/flyweight.component';\nimport {FlyweightRoutingModule} from './flyweight-routing.module';\nimport {SharedModule} from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlyweightRoutingModule,\n    SharedModule\n  ],\n  declarations: [FlyweightComponent]\n})\nexport class FlyweightModule { }\n","import {Injectable} from '@angular/core';\nimport {flyweight} from './flyweight/flyweight';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlyweightService {\n\n  constructor() {\n  }\n\n  flyweight() {\n    flyweight();\n  }\n}\n","export function flyweight() {\r\n  const printer = new Printer();\r\n  const printA = printer.get('a');\r\n  printA.config({value: 'a'});\r\n  // console.log(printA.draw());\r\n  const printB = printer.get('b');\r\n  printB.config({value: 'b'});\r\n  // console.log(printB.draw());\r\n  // console.log(printB);\r\n  printer.remove('a');\r\n}\r\n\r\nexport type State = { value: string, font?: string, color?: string };\r\n\r\nexport class Printer {\r\n  private pool: Map<string, Symbol> = new Map();\r\n\r\n  private set(key): void {\r\n    this.pool.set(key, new Character());\r\n  }\r\n\r\n  public get(key: string): Symbol {\r\n    if (!this.pool.has(key)) {\r\n      this.set(key);\r\n    }\r\n    return this.pool.get(key);\r\n  }\r\n\r\n  public remove(key: string): void {\r\n    this.pool.delete(key);\r\n  }\r\n}\r\n\r\ninterface Symbol {\r\n  config(config: State): void;\r\n\r\n  draw(): string;\r\n}\r\n\r\nexport class Character implements Symbol {\r\n  private state: State = {value: '', font: 'Times New Roman', color: 'black'};\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public config(config: State): void {\r\n    this.state = Object.assign(this.state, config);\r\n  }\r\n\r\n  public draw(): string {\r\n    return this.state.value;\r\n  }\r\n}\r\n"],"sourceRoot":""}