{"version":3,"sources":["webpack:///./src/app/modules/creational/factory-method/components/factory-method.component.css","webpack:///./src/app/modules/creational/factory-method/components/factory-method.component.html","webpack:///./src/app/modules/creational/factory-method/components/factory-method.component.ts","webpack:///./src/app/modules/creational/factory-method/factory-method-routing.module.ts","webpack:///./src/app/modules/creational/factory-method/factory-method.module.ts","webpack:///./src/app/modules/creational/factory-method/services/factory-method.service.ts","webpack:///./src/app/modules/creational/factory-method/services/factory-method/factory-method.ts"],"names":[],"mappings":"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","file":"modules-creational-factory-method-factory-method-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<app-pattern [patternCompData]=\\\"patternCompData\\\"></app-pattern>\\n\"","import {Component} from '@angular/core';\nimport {FactoryMethodService} from '../services/factory-method.service';\nimport {LINKS} from '../../../../LINKS';\nimport {ELEMENTS} from '../../../../elements';\nimport {map} from 'rxjs/operators';\nimport {GetGitContentService} from '../../../../core/services/http/get-git-content.service';\nimport {PatternConfig} from '../../../shared/components/pattern/pattern.component';\nimport {Observable} from 'rxjs';\nimport {InterpreterService} from '../../../behavioral/interpreter/services/interpreter.service';\n\n@Component({\n  selector: 'app-factory-method',\n  templateUrl: './factory-method.component.html',\n  styleUrls: ['./factory-method.component.css']\n})\nexport class FactoryMethodComponent {\n  public patternCompData: PatternConfig = {\n    gitLink: LINKS.creational.factoryMethod.gitApiLink,\n    wikiLink: LINKS.creational.factoryMethod.wikiLink,\n    sampleLink: LINKS.creational.factoryMethod.sampleLink,\n    linkName: ELEMENTS.linkToSampleName,\n    sample: ELEMENTS.sampleTitle\n  };\n\n  constructor(private factoryMethod: FactoryMethodService, private http: GetGitContentService, private interpreter: InterpreterService) {\n    this.factoryMethod.factoryMethod();\n    const content$: Observable<string> = this.http.getData(this.patternCompData.gitLink).pipe(\n      map((resp: any) => {\n        return resp ? this.interpreter.interpreter(atob(resp.content)) : null;\n      })\n    );\n    this.patternCompData = Object.assign(this.patternCompData, {content$});\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {FactoryMethodComponent} from './components/factory-method.component';\n\nconst routes: Routes = [\n  {path: '', component: FactoryMethodComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FactoryMethodRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FactoryMethodRoutingModule } from './factory-method-routing.module';\nimport { FactoryMethodComponent } from './components/factory-method.component';\nimport {SharedModule} from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FactoryMethodRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    FactoryMethodComponent,\n  ]\n})\nexport class FactoryMethodModule { }\n","import {Injectable} from '@angular/core';\nimport {factoryMethod} from './factory-method/factory-method';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FactoryMethodService {\n\n  constructor() {\n  }\n\n  factoryMethod() {\n    factoryMethod();\n  }\n}\n","export function createProduct(name) {\r\n  switch (name) {\r\n    case 'Mustang ':\r\n      return new MustangFactory().createProduct();\r\n    case 'Mustang turbo':\r\n      return new MustangFactory().createProduct(true);\r\n    case 'Focus':\r\n      return new FocusFactory().createProduct();\r\n    default:\r\n      return 'You should create a relevant Factory';\r\n  }\r\n}\r\n\r\nexport function factoryMethod() {\r\n  const mustang = createProduct('Mustang');\r\n  const mustangTurbo = createProduct('Mustang turbo');\r\n  const focus = createProduct('Focus');\r\n  // console.log(mustang);\r\n  // console.log(mustangTurbo);\r\n  // console.log(focus);\r\n}\r\n\r\ninterface EveryCar {\r\n  name: string;\r\n  speedLimit: number;\r\n\r\n  start(): boolean;\r\n\r\n  speedUp(speed: number): boolean;\r\n}\r\n\r\nabstract class Car implements EveryCar {\r\n  public name: string;\r\n  public speedLimit: number;\r\n\r\n  public start(): boolean {\r\n    return true;\r\n  }\r\n\r\n  abstract speedUp(speed: number): boolean;\r\n}\r\n\r\nclass FocusCar extends Car {\r\n  public name = 'Fiesta';\r\n  public speedLimit = 200;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public speedUp(speed: number): boolean {\r\n    return speed <= this.speedLimit;\r\n  }\r\n}\r\n\r\nclass MustangCar extends Car {\r\n  public name = 'Mustang';\r\n  public speedLimit: number;\r\n\r\n  constructor(public turboVersion: boolean) {\r\n    super();\r\n    this.speedLimit = turboVersion ? 280 : 250;\r\n  }\r\n\r\n  public speedUp(speed: number): boolean {\r\n    return speed <= this.speedLimit;\r\n  }\r\n}\r\n\r\ninterface ProductFactory {\r\n  createProduct(): EveryCar;\r\n}\r\n\r\nabstract class CarFactory implements ProductFactory {\r\n  abstract createProduct(): EveryCar;\r\n}\r\n\r\nexport class FocusFactory extends CarFactory {\r\n  public createProduct(): EveryCar {\r\n    return new FocusCar();\r\n  }\r\n}\r\n\r\nclass MustangFactory extends CarFactory {\r\n  public createProduct(turbo?: boolean): EveryCar {\r\n    return new MustangCar(turbo);\r\n  }\r\n}\r\n"],"sourceRoot":""}